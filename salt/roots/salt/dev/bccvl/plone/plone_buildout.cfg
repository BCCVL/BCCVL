{% set plone = salt['pillar.get']('plone', {}) %}
{% set sentry = salt['pillar.get']('sentry', {}) %}
{% set private = salt['pillar.get']('private', {}) %}
{% set versions = salt['pillar.get']('versions', {}) %}

[buildout]
index = {{ private.pypi_index_url }}
extends =
    files/buildout.cfg

show-picked-versions = true
update-versions-file = picked-versions.cfg

parts =
  environment
# our custom stuff for non docker deployment
  GDAL
  lxml
  zeoserver
  backup
# the instances we want to build
{% for key in plone.get('instances', {}) %}
  {{ key }}
{% endfor %}
# test runners
  test
  test-coverage
  test-coverage-report
  jenkins-test
  jenkins-test-coverage

# speedup buildout
allow-hosts =
  *.bccvl.org.au
  *.google.com
  *.googlecode.com
  *.plone.com
  *.python.org
  *.plone.org
  *.github.com
  *.bitbucket.org
  github.com
  bitbucket.org
  subsoft.rcs.griffith.edu.au

always-checkout = {{ plone.get('mr_developer_always_checkout', True) }}

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = 127.0.0.1:8501
zeo-var = {{ plone.get('storage', {}).get('root', '${buildout:directory}/var}' }}
file-storage = ${zeoserver:zeo-var}/filestorage/Data.fs
blob-storage = ${zeoserver:zeo-var}/blobstorage
effective-user = plone
socket-name = /tmp/zeo.sock

[instance]
user = {{ plone.get('admin', 'admin') }}:{{ plone.get('password', 'admin') }}
effective-user = plone
eggs =
    Plone
    Pillow
    org.bccvl.site
    org.bccvl.tasks[exports,metadata]
    org.bccvl.movelib[scp,swift,http]
    org.bccvl.testsetup
    celery
    ipdb
{% if sentry %}
    raven
{% endif %}
environment-vars +=
    PTS_LANGUAGES en
    zope_18n_allowed_languages en
    zope_18n_compile_mo_files true
    TZ AEST-10
    BCCVL_CONFIG ${buildout:directory}/etc/bccvl.ini
    CELERY_CONFIG_MODULE celeryconfig
zodb-cache-sive = 10000
zeo-client-cache-size = 300MB
zeo-client-blob-cache-size = 300MB
zeo-client = on
shared-blob = on
blob-storage = ${zeoserver:blob-storage}
zeo-address = ${zeoserver:zeo-address}
event-log = disable
event-log-level = INFO
event-log-maxsize = 3mb
event-log-old-files = 2
event-log-custom =
  <syslog>
      level INFO
      facility local6
      address /dev/log
      format %(asctime)s %(name)s[%(process)d]: %(levelname)s %(message)s
      dateformat %b %d %H:%M:%S
  </syslog>
  {% if sentry %}
  %import raven.contrib.zope
  <sentry>
    dsn {{ sentry['dsn'] }}
    level ERROR
  </sentry>
  {% endif %}
access-log-max-size = 3mb
access-log-old-files = 2
debug-mode = off
verbose-security = off

{% for instname, instsettings in plone.get('instances', {}).items() %}
[{{ instname }}]
recipe = plone.recipe.zope2instance
<= instance
http-address = {{ instsettings.host }}:{{ instsettings.port }}
{% if 'debug' in instsettings %}
debug-mode = on
verbose-security = on
{% endif %}
{% endfor %}

[versions]
GDAL = {{ versions.GDAL }}

##############################################################################
# GDAL bindings
##############################################################################
[GDAL]
recipe = zc.recipe.egg:custom
egg = GDAL
include-dirs = /usr/include/gdal

##############################################################################
# special handling for C-Extensions
##############################################################################
[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml

##############################################################################
# Backups
##############################################################################

[backup]
recipe = collective.recipe.backup
