{% set visualiser = salt['pillar.get']('visualiser', {}) %}
{% set tmp = visualiser.get('tmp', '/tmp') %}
{% set sentry = salt['pillar.get']('sentry', {}) %}
{% set authtkt = salt['pillar.get']('authtkt', {}) %}

###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:pyramid]

########################################################
# CUSTOM Config
########################################################

###
# requests ssl verify
##
bccvl.ssl.verify = {{ visualiser.get('ssl_verify', True) }}

###
# AuthTKT config
###
authtkt.secret = {{ authtkt.get('secret', '') }}
authtkt.name = {{ authtkt.get('name', '') }}

###
# Mapscript config
###
bccvl.mapscript.map_files_root_path = %(here)s/map_files
bccvl.mapscript.map_data_files_root_path = {{ tmp }}/bccvl/map_data_files

###
# DataManager config
###
# NO TRAILING SLASH
bccvl.data_manager.base_url = http://localhost/dm

###
# DataMover config
###
bccvl.data_mover.use_local_implementation = false

# NO TRAILING SLASH
bccvl.data_mover.base_url = http://127.0.0.1:10700
bccvl.data_mover.dest_host = 127.0.0.1
bccvl.data_mover.dest_user = visualiser
bccvl.data_mover.public_dir = {{ tmp }}/visualiser_public

###
# Dogpile cache config
###
cache.regions =
    short_term
    long_term
    until_update
    forever
cache.short_term.backend = dogpile.cache.memory
cache.short_term.expiration_time = 60
cache.long_term.backend = dogpile.cache.memory
cache.long_term.expiration_time = 3600
cache.until_update.backend = dogpile.cache.memory
cache.until_update.expiration_time = -1
cache.forever.backend = dogpile.cache.memory
cache.forever.expiration_time = -1

########################################################
# DEFAULT App Config
########################################################

use = egg:BCCVL_Visualiser

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm

###
# Use repoze
###
[filter:vhm]
use = egg:repoze.vhm#vhm_path

###
# Add a Pipeline
###
[pipeline:main]
pipeline =
    {{ 'raven' if sentry else ''}}
    vhm
    pyramid

{% if sentry %}
[filter:raven]
use = egg:raven#raven
dsn = {{ sentry['dsn'] }}
{% endif %}

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 10600
workers = 2
threads = 4
limit_request_line = 8192

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, bccvl_visualiser{{ ', sentry' if sentry else '' }}

[handlers]
keys = syslog{{ ', sentry' if sentry else '' }}

[formatters]
keys = syslog{{ ', sentry' if sentry else '' }}

[logger_root]
level = WARN
handlers = syslog{{ ', sentry' if sentry else '' }}

[logger_bccvl_visualiser]
level = INFO
handlers =
qualname = bccvl_visualiser

[handler_syslog]
class = handlers.SysLogHandler
args = ('/dev/log', handlers.SysLogHandler.LOG_LOCAL3, )
formatter = syslog

[formatter_syslog]
format = visualiser[%(threadName)s]: %(levelname)s: %(name)s: %(message)s

{% if sentry %}
[logger_sentry]
level = ERROR
handlers = syslog
qualname = sentry.errors
propagate = 0

[handler_sentry]
class = raven.handlers.logging.SentryHandler
args = ('{{ sentry['dsn'] }}',)
level = ERROR
formatter = sentry

[formatter_sentry]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
{% endif %}

