###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:pyramid]
use = egg:data_mover

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm

sqlalchemy.url = sqlite:///production.sqlite

# Time between attempts to download ALA occurrences in seconds
ala_service.sleep_time = 10

# URLs to ALA APIs. ${lsid} is replaced when performing the request
ala_service.occurrence_url = http://biocache.ala.org.au/ws/occurrences/index/download?qa=zeroCoordinates,badlyFormedBasisOfRecord,detectedOutlier,decimalLatLongCalculationFromEastingNorthingFailed,missingBasisOfRecord,decimalLatLongCalculationFromVerbatimFailed,coordinatesCentreOfCountry,geospatialIssue,coordinatesOutOfRange,speciesOutsideExpertRange,userVerified,processingError,decimalLatLongConverionFailed,coordinatesCentreOfStateProvince,habitatMismatch&q=lsid:${lsid}&fields=decimalLongitude,decimalLatitude,coordinateUncertaintyInMeters.p,eventDate.p,year.p,month.p&reasonTypeId=4
ala_service.metadata_url = http://bie.ala.org.au/ws/species/${lsid}.json

# Specify directory for tmp files here - default is the local /tmp directory
# Make sure that the directory actually exists
# tmp.dir = /tmp/datamover_tmp

###
# Use repoze
###
[filter:vhm]
use = egg:repoze.vhm#vhm_path

###
# Add a Pipeline
###
[pipeline:main]
pipeline =
    vhm
    pyramid

[server:main]
use = egg:waitress#main
host = 127.0.0.1
port = 10700

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, data_mover, sqlalchemy

[handlers]
keys = syslog

[formatters]
keys = syslog

[logger_root]
level = INFO
handlers = syslog

[logger_data_mover]
qualname = data_mover
handlers = syslog

[logger_sqlalchemy]
level = WARN
qualname = sqlalchemy.engine
handlers = syslog
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_syslog]
class = handlers.SysLogHandler
args = ('/dev/log', handlers.SysLogHandler.LOG_LOCAL3, )
formatter = syslog

[formatter_syslog]
format = data_mover[%(threadName)s]: %(levelname)s: %(name)s: %(message)s
