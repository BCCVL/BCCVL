{% set hostname = pillar['monitor']['hostname'] %}

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
    listen 80;
    server_name {{ hostname }};
    charset utf-8;

    # redirect all traffic to ssl
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
    server_name {{ hostname }};
    charset utf-8;

    ############# ssl options
    ssl_certificate      /etc/pki/tls/monitor.crt.pem;
    ssl_certificate_key  /etc/pki/tls/private/monitor.key.pem;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout  10m;

    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;

    ############## flower
    location /flower/ {
        rewrite ^/flower/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:5555;
        ## pass websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-By    $server_addr:$server_port;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme  $scheme;
    }


    ################ loganalyzer
    location /loganalyzer/ {
      # loganalyzer static files
      root /var/www ;
      index index.html index.php;
    }

    location ~ ^/loganalyzer/.*\.php(/|$) {
        # loganalyzer php stuff
        root /var/www ;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
                return 404;
        }

        fastcgi_pass unix:/var/run/php-fpm/loganalyzer.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILNAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    ############## kibana
    # TODO: covert to kibana auth proxyy?
    #       otherwise properly do url-rewrite and setup authentication to elastic-search (and kibana)
    location /kibana {
      root /var/www;
    }

    location ~ ^/_aliases$ {
        proxy_pass http://127.0.0.1:9200;
        proxy_read_timeout 90;
      }
      location ~ ^/.*/_aliases$ {
        proxy_pass http://127.0.0.1:9200;
        proxy_read_timeout 90;
      }
      location ~ ^/_nodes$ {
        proxy_pass http://127.0.0.1:9200;
        proxy_read_timeout 90;
      }
      location ~ ^/.*/_search$ {
        proxy_pass http://127.0.0.1:9200;
        proxy_read_timeout 90;
      }
      location ~ ^/.*/_mapping {
        proxy_pass http://127.0.0.1:9200;
        proxy_read_timeout 90;
      }

      # Password protected end points
      location ~ ^/kibana-int/dashboard/.*$ {
        proxy_pass http://127.0.0.1:9200;
        proxy_read_timeout 90;
        limit_except GET {
          proxy_pass http://127.0.0.1:9200;
          # auth_basic "Restricted";
          # auth_basic_user_file /etc/nginx/conf.d/kibana.myhost.org.htpasswd;
        }
      }
      location ~ ^/kibana-int/temp.*$ {
        proxy_pass http://127.0.0.1:9200;
        proxy_read_timeout 90;
        limit_except GET {
          proxy_pass http://127.0.0.1:9200;
          # auth_basic "Restricted";
          # auth_basic_user_file /etc/nginx/conf.d/kibana.myhost.org.htpasswd;
        }
      }

    ############## Sentry
    location /sentry {
      proxy_pass         http://localhost:20000;
      proxy_redirect     off;

      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }


    ############# default config from orig nginx config file

    # keep some of the nginx defaults
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        auth_basic "BCCVL Restricted Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
