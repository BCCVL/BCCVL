########## Global Config
######## Setup TLS
$DefaultNetstreamDriver gtls
$DefaultNetstreamDriverCAFile /etc/pki/tls/certs/bccvlca.crt.pem
$DefaultNetstreamDriverCertFile /etc/pki/tls/certs/rsyslog.crt.pem
$DefaultNetstreamDriverKeyFile /etc/pki/tls/private/rsyslog.key.pem

######### LOAD MODULES
module(load="mmjsonparse")
module(load="ommongodb")
module(load="imtcp"
       streamdriver.mode="1"  # TLS only
       streamdriver.authmode="x509/name" # match cert name
       permittedpeer=["*.bccvl.org.au"])  # allowed names


######### log all local syslog messages itself
syslog.info /var/log/syslog

########## Send all local logs to mongodb
*.* action(type="ommongodb"
           server="{{ salt['pillar.get']('rsyslog:ommongodb:server', '127.0.0.1') }}"
           db="logs"
           collection="syslog")

########## reciev logs over tcp tls
input(type="imtcp"
      name="imtcp-tls"
      port="{{ salt['pillar.get']('rsyslog:port','1514') }}"
      ruleset="remote")

########## template for per remote host file name
template(name="PerHostFile" type="string" string="/var/log/remote/%hostname%.log")

########## store each remote host log in separate file and in mongodb
ruleset(name="remote") {
  # store logs in per host log files
  action(type="omfile" DynaFile="PerHostFile")
  # also store lgos per environment (dev, prod, qa in db)
  if $hostname contains '-dev' then {
    action(type="ommongodb"
           server="{{ salt['pillar.get']('rsyslog:ommongodb:server', '127.0.0.1') }}"
           db="dev-logs"
           collection="syslog")
  } else if $hostname contains '-qa' then {
    action(type="ommongodb"
           server="{{ salt['pillar.get']('rsyslog:ommongodb:server', '127.0.0.1') }}"
           db="qa-logs"
           collection="syslog")
  } else if $hostname contains '-test' then {
    action(type="ommongodb"
           server="{{ salt['pillar.get']('rsyslog:ommongodb:server', '127.0.0.1') }}"
           db="test-logs"
           collection="syslog")
  } else if $hostname contains '-prod' then {
    action(type="ommongodb"
           server="{{ salt['pillar.get']('rsyslog:ommongodb:server', '127.0.0.1') }}"
           db="prod-logs"
           collection="syslog")
  }
}
