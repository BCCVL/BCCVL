{% set dbuser = 'rsyslog' %}
{% set dbpass = salt['pillar.get']('postgres:users:rsyslog:password') %}
{% set dbserver = salt['pillar.get']('rsyslog:ompgsql:server', '127.0.0.1') %}

########## Global Config
######## Setup TLS
$DefaultNetstreamDriver gtls
$DefaultNetstreamDriverCAFile /etc/pki/tls/certs/bccvlca.crt.pem
$DefaultNetstreamDriverCertFile /etc/pki/tls/certs/rsyslog.crt.pem
$DefaultNetstreamDriverKeyFile /etc/pki/tls/private/rsyslog.key.pem

######### LOAD MODULES
module(load="mmjsonparse")
module(load="ompgsql")
module(load="imtcp"
       streamdriver.mode="1"  # TLS only
       streamdriver.authmode="x509/name" # match cert name
       permittedpeer=["*.bccvl.org.au"])  # allowed names


######### log all local syslog messages itself
syslog.info /var/log/syslog

########## Send all local logs to postgres
$template dblog,"insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag, ProcessID) values ('%msg%', %syslogfacility%, '%HOSTNAME%', %syslogpriority%, '%timereported:::date-pgsql%', '%timegenerated:::date-pgsql%', %iut%, '%programname%', '%procid%')",STDSQL

*.* :ompgsql:{{ dbserver }},logs,{{ dbuser }},{{ dbpass }};dblog

########## reciev logs over tcp tls
input(type="imtcp"
      name="imtcp-tls"
      port="{{ salt['pillar.get']('rsyslog:port','1514') }}"
      ruleset="remote")

########## template for per remote host file name
template(name="PerHostFile" type="string" string="/var/log/remote/%hostname%.log")

########## store each remote host log in separate file and in postgres
ruleset(name="remote") {
  # store logs in per host log files
  action(type="omfile" DynaFile="PerHostFile")
  # also store lgos per environment (dev, prod, qa in db)
  if $hostname contains '-dev' then {
    *.* :ompgsql:{{ dbserver }},dev-logs,{{ dbuser }},{{ dbpass }};dblog
  } else if $hostname contains '-qa' then {
    *.* :ompgsql:{{ dbserver }},qa-logs,{{ dbuser }},{{ dbpass }};dblog
  } else if $hostname contains '-test' then {
    *.* :ompgsql:{{ dbserver }},test-logs,{{ dbuser }},{{ dbpass }};dblog
  } else if $hostname contains '-prod' or $hostname == 'app' then {
    *.* :ompgsql:{{ dbserver }},prod-logs,{{ dbuser }},{{ dbpass }};dblog
  }
}


